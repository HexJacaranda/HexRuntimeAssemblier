//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from c:\Users\I525976\source\repos\HexJacaranda\HexRuntimeAssemblier\HexRuntimeAssemblier\.antlr\Assemblier.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="Assemblier"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public interface IAssemblierListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStart([NotNull] Assemblier.StartContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStart([NotNull] Assemblier.StartContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.modifierAccess"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModifierAccess([NotNull] Assemblier.ModifierAccessContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.modifierAccess"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModifierAccess([NotNull] Assemblier.ModifierAccessContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.modifierLife"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModifierLife([NotNull] Assemblier.ModifierLifeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.modifierLife"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModifierLife([NotNull] Assemblier.ModifierLifeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.methodArgument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethodArgument([NotNull] Assemblier.MethodArgumentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.methodArgument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethodArgument([NotNull] Assemblier.MethodArgumentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.methodArgumentList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethodArgumentList([NotNull] Assemblier.MethodArgumentListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.methodArgumentList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethodArgumentList([NotNull] Assemblier.MethodArgumentListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.methodReturnType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethodReturnType([NotNull] Assemblier.MethodReturnTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.methodReturnType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethodReturnType([NotNull] Assemblier.MethodReturnTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.methodName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethodName([NotNull] Assemblier.MethodNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.methodName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethodName([NotNull] Assemblier.MethodNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.methodImport"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethodImport([NotNull] Assemblier.MethodImportContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.methodImport"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethodImport([NotNull] Assemblier.MethodImportContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.methodSource"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethodSource([NotNull] Assemblier.MethodSourceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.methodSource"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethodSource([NotNull] Assemblier.MethodSourceContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.methodLocal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethodLocal([NotNull] Assemblier.MethodLocalContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.methodLocal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethodLocal([NotNull] Assemblier.MethodLocalContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.methodLocals"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethodLocals([NotNull] Assemblier.MethodLocalsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.methodLocals"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethodLocals([NotNull] Assemblier.MethodLocalsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.methodCode"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethodCode([NotNull] Assemblier.MethodCodeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.methodCode"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethodCode([NotNull] Assemblier.MethodCodeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.methodProperty"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethodProperty([NotNull] Assemblier.MethodPropertyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.methodProperty"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethodProperty([NotNull] Assemblier.MethodPropertyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.methodBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethodBody([NotNull] Assemblier.MethodBodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.methodBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethodBody([NotNull] Assemblier.MethodBodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.methodDef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethodDef([NotNull] Assemblier.MethodDefContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.methodDef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethodDef([NotNull] Assemblier.MethodDefContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.methodParentType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethodParentType([NotNull] Assemblier.MethodParentTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.methodParentType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethodParentType([NotNull] Assemblier.MethodParentTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.methodRef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethodRef([NotNull] Assemblier.MethodRefContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.methodRef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethodRef([NotNull] Assemblier.MethodRefContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.fieldDef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFieldDef([NotNull] Assemblier.FieldDefContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.fieldDef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFieldDef([NotNull] Assemblier.FieldDefContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.fieldRef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFieldRef([NotNull] Assemblier.FieldRefContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.fieldRef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFieldRef([NotNull] Assemblier.FieldRefContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.propertyGet"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPropertyGet([NotNull] Assemblier.PropertyGetContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.propertyGet"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPropertyGet([NotNull] Assemblier.PropertyGetContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.propertySet"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPropertySet([NotNull] Assemblier.PropertySetContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.propertySet"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPropertySet([NotNull] Assemblier.PropertySetContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.propertyDef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPropertyDef([NotNull] Assemblier.PropertyDefContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.propertyDef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPropertyDef([NotNull] Assemblier.PropertyDefContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.eventAdd"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEventAdd([NotNull] Assemblier.EventAddContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.eventAdd"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEventAdd([NotNull] Assemblier.EventAddContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.eventRemove"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEventRemove([NotNull] Assemblier.EventRemoveContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.eventRemove"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEventRemove([NotNull] Assemblier.EventRemoveContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.eventDef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEventDef([NotNull] Assemblier.EventDefContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.eventDef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEventDef([NotNull] Assemblier.EventDefContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.inheritOrImplementType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInheritOrImplementType([NotNull] Assemblier.InheritOrImplementTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.inheritOrImplementType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInheritOrImplementType([NotNull] Assemblier.InheritOrImplementTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.typeRefList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeRefList([NotNull] Assemblier.TypeRefListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.typeRefList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeRefList([NotNull] Assemblier.TypeRefListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.implementList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImplementList([NotNull] Assemblier.ImplementListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.implementList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImplementList([NotNull] Assemblier.ImplementListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.typeInherit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeInherit([NotNull] Assemblier.TypeInheritContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.typeInherit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeInherit([NotNull] Assemblier.TypeInheritContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.assemblyRef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssemblyRef([NotNull] Assemblier.AssemblyRefContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.assemblyRef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssemblyRef([NotNull] Assemblier.AssemblyRefContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.typeRef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeRef([NotNull] Assemblier.TypeRefContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.typeRef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeRef([NotNull] Assemblier.TypeRefContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.typeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeName([NotNull] Assemblier.TypeNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.typeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeName([NotNull] Assemblier.TypeNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.typeRefNamespace"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeRefNamespace([NotNull] Assemblier.TypeRefNamespaceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.typeRefNamespace"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeRefNamespace([NotNull] Assemblier.TypeRefNamespaceContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.typeRefGeneric"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeRefGeneric([NotNull] Assemblier.TypeRefGenericContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.typeRefGeneric"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeRefGeneric([NotNull] Assemblier.TypeRefGenericContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.typeRefPlain"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeRefPlain([NotNull] Assemblier.TypeRefPlainContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.typeRefPlain"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeRefPlain([NotNull] Assemblier.TypeRefPlainContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.typeRefNode"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeRefNode([NotNull] Assemblier.TypeRefNodeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.typeRefNode"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeRefNode([NotNull] Assemblier.TypeRefNodeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.primitiveType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimitiveType([NotNull] Assemblier.PrimitiveTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.primitiveType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimitiveType([NotNull] Assemblier.PrimitiveTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.genericParameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGenericParameterList([NotNull] Assemblier.GenericParameterListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.genericParameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGenericParameterList([NotNull] Assemblier.GenericParameterListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType([NotNull] Assemblier.TypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType([NotNull] Assemblier.TypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.genericParameterRef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGenericParameterRef([NotNull] Assemblier.GenericParameterRefContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.genericParameterRef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGenericParameterRef([NotNull] Assemblier.GenericParameterRefContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.arrayType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArrayType([NotNull] Assemblier.ArrayTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.arrayType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArrayType([NotNull] Assemblier.ArrayTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.nestArrayType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNestArrayType([NotNull] Assemblier.NestArrayTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.nestArrayType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNestArrayType([NotNull] Assemblier.NestArrayTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.multidimensionArrayType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultidimensionArrayType([NotNull] Assemblier.MultidimensionArrayTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.multidimensionArrayType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultidimensionArrayType([NotNull] Assemblier.MultidimensionArrayTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.interiorRefType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInteriorRefType([NotNull] Assemblier.InteriorRefTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.interiorRefType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInteriorRefType([NotNull] Assemblier.InteriorRefTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.genericList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGenericList([NotNull] Assemblier.GenericListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.genericList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGenericList([NotNull] Assemblier.GenericListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.classBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassBody([NotNull] Assemblier.ClassBodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.classBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassBody([NotNull] Assemblier.ClassBodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.className"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassName([NotNull] Assemblier.ClassNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.className"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassName([NotNull] Assemblier.ClassNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.namespaceValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNamespaceValue([NotNull] Assemblier.NamespaceValueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.namespaceValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNamespaceValue([NotNull] Assemblier.NamespaceValueContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.classNameSpace"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassNameSpace([NotNull] Assemblier.ClassNameSpaceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.classNameSpace"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassNameSpace([NotNull] Assemblier.ClassNameSpaceContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.classDef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassDef([NotNull] Assemblier.ClassDefContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.classDef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassDef([NotNull] Assemblier.ClassDefContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.propertyValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPropertyValue([NotNull] Assemblier.PropertyValueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.propertyValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPropertyValue([NotNull] Assemblier.PropertyValueContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.propertyKey"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPropertyKey([NotNull] Assemblier.PropertyKeyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.propertyKey"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPropertyKey([NotNull] Assemblier.PropertyKeyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.property"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProperty([NotNull] Assemblier.PropertyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.property"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProperty([NotNull] Assemblier.PropertyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.assemblyDef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssemblyDef([NotNull] Assemblier.AssemblyDefContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.assemblyDef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssemblyDef([NotNull] Assemblier.AssemblyDefContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.opLabel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpLabel([NotNull] Assemblier.OpLabelContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.opLabel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpLabel([NotNull] Assemblier.OpLabelContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.opLdFld"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpLdFld([NotNull] Assemblier.OpLdFldContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.opLdFld"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpLdFld([NotNull] Assemblier.OpLdFldContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.opLdFldA"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpLdFldA([NotNull] Assemblier.OpLdFldAContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.opLdFldA"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpLdFldA([NotNull] Assemblier.OpLdFldAContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.opLdLoc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpLdLoc([NotNull] Assemblier.OpLdLocContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.opLdLoc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpLdLoc([NotNull] Assemblier.OpLdLocContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.opLdLocA"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpLdLocA([NotNull] Assemblier.OpLdLocAContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.opLdLocA"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpLdLocA([NotNull] Assemblier.OpLdLocAContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.opLdArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpLdArg([NotNull] Assemblier.OpLdArgContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.opLdArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpLdArg([NotNull] Assemblier.OpLdArgContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.opLdArgA"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpLdArgA([NotNull] Assemblier.OpLdArgAContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.opLdArgA"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpLdArgA([NotNull] Assemblier.OpLdArgAContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.opLdElem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpLdElem([NotNull] Assemblier.OpLdElemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.opLdElem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpLdElem([NotNull] Assemblier.OpLdElemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.opLdElemA"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpLdElemA([NotNull] Assemblier.OpLdElemAContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.opLdElemA"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpLdElemA([NotNull] Assemblier.OpLdElemAContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.opLdStr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpLdStr([NotNull] Assemblier.OpLdStrContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.opLdStr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpLdStr([NotNull] Assemblier.OpLdStrContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.opConstant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpConstant([NotNull] Assemblier.OpConstantContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.opConstant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpConstant([NotNull] Assemblier.OpConstantContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.opLdC"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpLdC([NotNull] Assemblier.OpLdCContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.opLdC"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpLdC([NotNull] Assemblier.OpLdCContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.opLdFn"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpLdFn([NotNull] Assemblier.OpLdFnContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.opLdFn"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpLdFn([NotNull] Assemblier.OpLdFnContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.opLdNull"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpLdNull([NotNull] Assemblier.OpLdNullContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.opLdNull"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpLdNull([NotNull] Assemblier.OpLdNullContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.opStFld"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpStFld([NotNull] Assemblier.OpStFldContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.opStFld"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpStFld([NotNull] Assemblier.OpStFldContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.opStLoc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpStLoc([NotNull] Assemblier.OpStLocContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.opStLoc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpStLoc([NotNull] Assemblier.OpStLocContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.opStArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpStArg([NotNull] Assemblier.OpStArgContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.opStArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpStArg([NotNull] Assemblier.OpStArgContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.opStElem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpStElem([NotNull] Assemblier.OpStElemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.opStElem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpStElem([NotNull] Assemblier.OpStElemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.opStTA"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpStTA([NotNull] Assemblier.OpStTAContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.opStTA"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpStTA([NotNull] Assemblier.OpStTAContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.opAdd"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpAdd([NotNull] Assemblier.OpAddContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.opAdd"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpAdd([NotNull] Assemblier.OpAddContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.opSub"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpSub([NotNull] Assemblier.OpSubContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.opSub"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpSub([NotNull] Assemblier.OpSubContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.opMul"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpMul([NotNull] Assemblier.OpMulContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.opMul"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpMul([NotNull] Assemblier.OpMulContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.opDiv"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpDiv([NotNull] Assemblier.OpDivContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.opDiv"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpDiv([NotNull] Assemblier.OpDivContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.opMod"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpMod([NotNull] Assemblier.OpModContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.opMod"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpMod([NotNull] Assemblier.OpModContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.opAnd"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpAnd([NotNull] Assemblier.OpAndContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.opAnd"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpAnd([NotNull] Assemblier.OpAndContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.opOr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpOr([NotNull] Assemblier.OpOrContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.opOr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpOr([NotNull] Assemblier.OpOrContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.opXor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpXor([NotNull] Assemblier.OpXorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.opXor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpXor([NotNull] Assemblier.OpXorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.opNot"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpNot([NotNull] Assemblier.OpNotContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.opNot"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpNot([NotNull] Assemblier.OpNotContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.opNeg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpNeg([NotNull] Assemblier.OpNegContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.opNeg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpNeg([NotNull] Assemblier.OpNegContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.opConv"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpConv([NotNull] Assemblier.OpConvContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.opConv"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpConv([NotNull] Assemblier.OpConvContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.opCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpCall([NotNull] Assemblier.OpCallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.opCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpCall([NotNull] Assemblier.OpCallContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.opCallVirt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpCallVirt([NotNull] Assemblier.OpCallVirtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.opCallVirt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpCallVirt([NotNull] Assemblier.OpCallVirtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.opRet"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpRet([NotNull] Assemblier.OpRetContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.opRet"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpRet([NotNull] Assemblier.OpRetContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.opCmpCond"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpCmpCond([NotNull] Assemblier.OpCmpCondContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.opCmpCond"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpCmpCond([NotNull] Assemblier.OpCmpCondContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.opCmp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpCmp([NotNull] Assemblier.OpCmpContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.opCmp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpCmp([NotNull] Assemblier.OpCmpContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.opJcc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpJcc([NotNull] Assemblier.OpJccContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.opJcc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpJcc([NotNull] Assemblier.OpJccContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.opJmp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpJmp([NotNull] Assemblier.OpJmpContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.opJmp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpJmp([NotNull] Assemblier.OpJmpContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.opThrow"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpThrow([NotNull] Assemblier.OpThrowContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.opThrow"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpThrow([NotNull] Assemblier.OpThrowContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.opTry"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpTry([NotNull] Assemblier.OpTryContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.opTry"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpTry([NotNull] Assemblier.OpTryContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.opCatch"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpCatch([NotNull] Assemblier.OpCatchContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.opCatch"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpCatch([NotNull] Assemblier.OpCatchContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.opFinally"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpFinally([NotNull] Assemblier.OpFinallyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.opFinally"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpFinally([NotNull] Assemblier.OpFinallyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.opNew"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpNew([NotNull] Assemblier.OpNewContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.opNew"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpNew([NotNull] Assemblier.OpNewContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.opNewArr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpNewArr([NotNull] Assemblier.OpNewArrContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.opNewArr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpNewArr([NotNull] Assemblier.OpNewArrContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.opDup"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpDup([NotNull] Assemblier.OpDupContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.opDup"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpDup([NotNull] Assemblier.OpDupContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.opPop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpPop([NotNull] Assemblier.OpPopContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.opPop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpPop([NotNull] Assemblier.OpPopContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.opNop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpNop([NotNull] Assemblier.OpNopContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.opNop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpNop([NotNull] Assemblier.OpNopContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Assemblier.ilInstruction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIlInstruction([NotNull] Assemblier.IlInstructionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Assemblier.ilInstruction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIlInstruction([NotNull] Assemblier.IlInstructionContext context);
}
